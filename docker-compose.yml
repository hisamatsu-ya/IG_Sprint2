# Compose V2: поле "version" не нужно — удалено
networks:
  cinemaabyss-network:

volumes:
  pgdata:

services:
  # ---------- Data layer ----------
  postgres:
    image: postgres:15
    container_name: cinemaabyss-postgres
    environment:
      POSTGRES_USER: cinema
      POSTGRES_PASSWORD: cinema
      POSTGRES_DB: cinema
    volumes:
      - pgdata:/var/lib/postgresql/data
      # если у вас есть init-скрипты БД, оставьте этот маппинг; иначе закомментируйте
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - cinemaabyss-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinema -d cinema"]
      interval: 5s
      timeout: 3s
      retries: 20

  # ---------- Kafka stack (Bitnami) ----------
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: cinemaabyss-zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - cinemaabyss-network

  kafka:
    image: bitnami/kafka:3.7
    container_name: cinemaabyss-kafka
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - cinemaabyss-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: cinemaabyss-kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8090:8080"
    networks:
      - cinemaabyss-network

  # ---------- Application layer ----------
  monolith:
    build:
      context: ./src/monolith
      dockerfile: Dockerfile
    container_name: cinemaabyss-monolith
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      DB_CONNECTION_STRING: postgres://cinema:cinema@postgres:5432/cinema?sslmode=disable
    networks:
      - cinemaabyss-network

  movies-service:
    build:
      context: ./src/microservices/movies
      dockerfile: Dockerfile
    container_name: cinemaabyss-movies-service
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      DB_CONNECTION_STRING: postgres://cinema:cinema@postgres:5432/cinema?sslmode=disable
    networks:
      - cinemaabyss-network

  events-service:
    build:
      context: ./src/microservices/events
      dockerfile: Dockerfile
    container_name: cinemaabyss-events-service
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      PORT: 8082
      KAFKA_BROKERS: kafka:9092
      MOVIE_TOPIC: movie-events
      USER_TOPIC: user-events
      PAYMENT_TOPIC: payment-events
    networks:
      - cinemaabyss-network

  proxy-service:
    build:
      context: ./src/microservices/proxy
      dockerfile: Dockerfile
    container_name: cinemaabyss-proxy-service
    depends_on:
      - monolith
      - movies-service
      - events-service
    environment:
      PORT: 8000
      MONOLITH_URL: http://monolith:8080
      MOVIES_SERVICE_URL: http://movies-service:8081
      EVENTS_SERVICE_URL: http://events-service:8082
      GRADUAL_MIGRATION: "true"       # Strangler Fig on/off
      MOVIES_MIGRATION_PERCENT: "50"  # % трафика на movies-service
    ports:
      - "8000:8000"
    networks:
      - cinemaabyss-network
