version: "3.9"

networks:
  cinemaabyss-network:

services:
  # --- Data layer ---
  postgres:
    image: postgres:15
    container_name: cinemaabyss-postgres
    environment:
      POSTGRES_USER: cinema
      POSTGRES_PASSWORD: cinema
      POSTGRES_DB: cinema
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - cinemaabyss-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinema -d cinema"]
      interval: 5s
      timeout: 3s
      retries: 20

  # --- Kafka stack ---
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: cinemaabyss-zookeeper
    ports:
      - "2181:2181"
    networks:
      - cinemaabyss-network

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: cinemaabyss-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      # автосоздание нужных топиков (1 партиция, 1 реплика)
      KAFKA_CREATE_TOPICS: "movie-events:1:1,user-events:1:1,payment-events:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - cinemaabyss-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: cinemaabyss-kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8090:8080"
    networks:
      - cinemaabyss-network

  # --- Application layer ---
  monolith:
    build:
      context: ./src/monolith
      dockerfile: Dockerfile
    container_name: cinemaabyss-monolith
    depends_on:
      - postgres
    environment:
      PORT: 8080
      DATABASE_URL: postgres://cinema:cinema@postgres:5432/cinema?sslmode=disable
    networks:
      - cinemaabyss-network

  movies-service:
    build:
      context: ./src/microservices/movies
      dockerfile: Dockerfile
    container_name: cinemaabyss-movies-service
    depends_on:
      - postgres
    environment:
      PORT: 8081
      DATABASE_URL: postgres://cinema:cinema@postgres:5432/cinema?sslmode=disable
    networks:
      - cinemaabyss-network

  events-service:
    build:
      context: ./src/microservices/events
      dockerfile: Dockerfile
    container_name: cinemaabyss-events-service
    depends_on:
      - kafka
    environment:
      PORT: 8082
      KAFKA_BROKERS: kafka:9092
      MOVIE_TOPIC: movie-events
      USER_TOPIC: user-events
      PAYMENT_TOPIC: payment-events
    networks:
      - cinemaabyss-network

  proxy-service:
    build:
      context: ./src/microservices/proxy
      dockerfile: Dockerfile
    container_name: cinemaabyss-proxy-service
    depends_on:
      - monolith
      - movies-service
      - events-service
    environment:
      PORT: 8000
      MONOLITH_URL: http://monolith:8080
      MOVIES_SERVICE_URL: http://movies-service:8081
      EVENTS_SERVICE_URL: http://events-service:8082
      GRADUAL_MIGRATION: "true"       # вкл/выкл Strangler Fig
      MOVIES_MIGRATION_PERCENT: "50"  # процент трафика на movies-service
    ports:
      - "8000:8000"
    networks:
      - cinemaabyss-network

volumes:
  pgdata:
